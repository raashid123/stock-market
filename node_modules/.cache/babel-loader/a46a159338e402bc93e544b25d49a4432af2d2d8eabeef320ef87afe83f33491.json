{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\stock\\\\stock\\\\src\\\\components\\\\StockTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './StockTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockTable = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:5000/api/stocks').then(response => response.json()).then(data => {\n      console.log('Fetched Stock Data:', data); // Log to check data structure\n      setStocks(data);\n      setFilteredStocks(data); // Initialize filtered stocks\n    }).catch(error => console.error('Error fetching stock data:', error));\n  }, []);\n  const handleSearch = e => {\n    const searchTerm = e.target.value.toLowerCase();\n    setSearchTerm(searchTerm);\n\n    // Update filtered stocks based on the search term\n    const filtered = searchTerm ? stocks.filter(stock => stock.company && stock.company.toLowerCase().includes(searchTerm)) : stocks; // If searchTerm is empty, show all stocks\n\n    setFilteredStocks(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search\",\n        children: \"Filter by company: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        value: searchTerm,\n        onChange: handleSearch,\n        placeholder: \"Search for company...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-scroll-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"stock-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"COMPANY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"YESTERDAY OPENING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"YESTERDAY CLOSING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TODAY HIGH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TODAY LOW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CURRENT VALUE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.company || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.yesterday_opening || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.yesterday_closing || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.today_high || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.today_low || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.current_value || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(StockTable, \"Plrdud7+Y45FlShXL9SSRs3OxA4=\");\n_c = StockTable;\nexport default StockTable;\nvar _c;\n$RefreshReg$(_c, \"StockTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StockTable","_s","stocks","setStocks","filteredStocks","setFilteredStocks","searchTerm","setSearchTerm","fetch","then","response","json","data","console","log","catch","error","handleSearch","e","target","value","toLowerCase","filtered","filter","stock","company","includes","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","map","index","yesterday_opening","yesterday_closing","today_high","today_low","current_value","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/stock/stock/src/components/StockTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './StockTable.css';\r\n\r\nconst StockTable = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [filteredStocks, setFilteredStocks] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/stocks')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Fetched Stock Data:', data);  // Log to check data structure\r\n        setStocks(data);\r\n        setFilteredStocks(data);  // Initialize filtered stocks\r\n      })\r\n      .catch((error) => console.error('Error fetching stock data:', error));\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    const searchTerm = e.target.value.toLowerCase();\r\n    setSearchTerm(searchTerm);\r\n    \r\n    // Update filtered stocks based on the search term\r\n    const filtered = searchTerm\r\n      ? stocks.filter((stock) => \r\n          stock.company && stock.company.toLowerCase().includes(searchTerm)\r\n        )\r\n      : stocks;  // If searchTerm is empty, show all stocks\r\n\r\n    setFilteredStocks(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className=\"stock-table-container\">\r\n      <div className=\"filter-container\">\r\n        <label htmlFor=\"search\">Filter by company: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          placeholder=\"Search for company...\"\r\n        />\r\n      </div>\r\n      <div className=\"table-scroll-container\"> {/* New div for scrolling */}\r\n        <table className=\"stock-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>COMPANY</th>\r\n              <th>YESTERDAY OPENING</th>\r\n              <th>YESTERDAY CLOSING</th>\r\n              <th>TODAY HIGH</th>\r\n              <th>TODAY LOW</th>\r\n              <th>CURRENT VALUE</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredStocks.map((stock, index) => (\r\n              <tr key={index}>\r\n                <td>{stock.company || 'N/A'}</td> {/* Default to 'N/A' if company is undefined */}\r\n                <td>{stock.yesterday_opening || 'N/A'}</td>\r\n                <td>{stock.yesterday_closing || 'N/A'}</td>\r\n                <td>{stock.today_high || 'N/A'}</td>\r\n                <td>{stock.today_low || 'N/A'}</td>\r\n                <td>{stock.current_value || 'N/A'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAAC,CAAC,CAAE;MAC3CT,SAAS,CAACS,IAAI,CAAC;MACfP,iBAAiB,CAACO,IAAI,CAAC,CAAC,CAAE;IAC5B,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMZ,UAAU,GAAGY,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;IAC/Cd,aAAa,CAACD,UAAU,CAAC;;IAEzB;IACA,MAAMgB,QAAQ,GAAGhB,UAAU,GACvBJ,MAAM,CAACqB,MAAM,CAAEC,KAAK,IAClBA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACC,OAAO,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACpB,UAAU,CAClE,CAAC,GACDJ,MAAM,CAAC,CAAE;;IAEbG,iBAAiB,CAACiB,QAAQ,CAAC;EAC7B,CAAC;EAED,oBACEvB,OAAA;IAAK4B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC7B,OAAA;MAAK4B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B7B,OAAA;QAAO8B,OAAO,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDlC,OAAA;QACEmC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,QAAQ;QACXf,KAAK,EAAEd,UAAW;QAClB8B,QAAQ,EAAEnB,YAAa;QACvBoB,WAAW,EAAC;MAAuB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlC,OAAA;MAAK4B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GAAC,GAAC,eACvC7B,OAAA;QAAO4B,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC5B7B,OAAA;UAAA6B,QAAA,eACE7B,OAAA;YAAA6B,QAAA,gBACE7B,OAAA;cAAA6B,QAAA,EAAI;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBlC,OAAA;cAAA6B,QAAA,EAAI;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1BlC,OAAA;cAAA6B,QAAA,EAAI;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1BlC,OAAA;cAAA6B,QAAA,EAAI;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBlC,OAAA;cAAA6B,QAAA,EAAI;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBlC,OAAA;cAAA6B,QAAA,EAAI;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRlC,OAAA;UAAA6B,QAAA,EACGxB,cAAc,CAACkC,GAAG,CAAC,CAACd,KAAK,EAAEe,KAAK,kBAC/BxC,OAAA;YAAA6B,QAAA,gBACE7B,OAAA;cAAA6B,QAAA,EAAKJ,KAAK,CAACC,OAAO,IAAI;YAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,KAAC,eAClClC,OAAA;cAAA6B,QAAA,EAAKJ,KAAK,CAACgB,iBAAiB,IAAI;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3ClC,OAAA;cAAA6B,QAAA,EAAKJ,KAAK,CAACiB,iBAAiB,IAAI;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3ClC,OAAA;cAAA6B,QAAA,EAAKJ,KAAK,CAACkB,UAAU,IAAI;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpClC,OAAA;cAAA6B,QAAA,EAAKJ,KAAK,CAACmB,SAAS,IAAI;YAAK;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnClC,OAAA;cAAA6B,QAAA,EAAKJ,KAAK,CAACoB,aAAa,IAAI;YAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GANhCM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtEID,UAAU;AAAA6C,EAAA,GAAV7C,UAAU;AAwEhB,eAAeA,UAAU;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}